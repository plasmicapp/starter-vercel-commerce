// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: g4Ez5Lq65bFwpS9M8VgRuA
// Component: GF97yrW5bgpvzP
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Navbar from "../../Navbar"; // plasmic-import: RYN9c2WQmTlJA/component
import { ProductBox } from "@plasmicpkgs/commerce"; // plasmic-import: 1gYJf_XBZUAD/codeComponent
import ProductFetch from "../../code-components/ProductFetch"; // plasmic-import: PbQNtbGBVlwcEt/codeComponent
import ProductSlider from "../../code-components/ProductSlider"; // plasmic-import: GZRqvwA8u1vg4x/codeComponent
import { ProductOptions } from "../../code-components/ProductOptions"; // plasmic-import: yRie_2rn7yFLAC/codeComponent
import { ProductOptionsDisplayName } from "../../code-components/ProductOptions"; // plasmic-import: kXV6DC7llQSkF8/codeComponent
import { ProductOptionsValues } from "../../code-components/ProductOptions"; // plasmic-import: Zquf1a7fstpqom/codeComponent
import { ProductOptionsValueLabel } from "../../code-components/ProductOptions"; // plasmic-import: _PHRkDzgGccJz7/codeComponent
import { ProductTextField } from "@plasmicpkgs/commerce"; // plasmic-import: S1F4q0wN6b/codeComponent
import AddToCart from "../../code-components/AddToCart"; // plasmic-import: rVKQEAcUK0Z76k/codeComponent
import Button from "../../Button"; // plasmic-import: g3ACdRzKBdu_3l/component
import Collapse from "../../code-components/Collapse"; // plasmic-import: suHT8NS9IShQF0/codeComponent

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_plasmic_kit_q_4_color_tokens_css from "../plasmic_kit_q_4_color_tokens/plasmic_plasmic_kit_q_4_color_tokens.module.css"; // plasmic-import: 95xp9cYcv7HrNWpFWWhbcv/projectcss
import projectcss from "./plasmic_next_js_commerce.module.css"; // plasmic-import: g4Ez5Lq65bFwpS9M8VgRuA/projectcss
import sty from "./PlasmicProduct.module.css"; // plasmic-import: GF97yrW5bgpvzP/css

import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: jprEHF8o--WWYP/icon
import IconIcon from "./icons/PlasmicIcon__Icon"; // plasmic-import: 3vD6ibSgBw56Bo/icon

export type PlasmicProduct__VariantMembers = {};

export type PlasmicProduct__VariantsArgs = {};
type VariantPropType = keyof PlasmicProduct__VariantsArgs;
export const PlasmicProduct__VariantProps = new Array<VariantPropType>();

export type PlasmicProduct__ArgsType = {};
type ArgPropType = keyof PlasmicProduct__ArgsType;
export const PlasmicProduct__ArgProps = new Array<ArgPropType>();

export type PlasmicProduct__OverridesType = {
  root?: p.Flex<"div">;
  navbar?: p.Flex<typeof Navbar>;
  productBox?: p.Flex<typeof ProductBox>;
  productFetch?: p.Flex<typeof ProductFetch>;
  columns?: p.Flex<"div">;
  productSlider?: p.Flex<typeof ProductSlider>;
  productOptions?: p.Flex<typeof ProductOptions>;
  productOptionsDisplayName?: p.Flex<typeof ProductOptionsDisplayName>;
  productOptionsValues?: p.Flex<typeof ProductOptionsValues>;
  productTextField?: p.Flex<typeof ProductTextField>;
  addToCart?: p.Flex<typeof AddToCart>;
  button?: p.Flex<typeof Button>;
};

export interface DefaultProductProps {}

function PlasmicProduct__RenderFunc(props: {
  variants: PlasmicProduct__VariantsArgs;
  args: PlasmicProduct__ArgsType;
  overrides: PlasmicProduct__OverridesType;

  forNode?: string;
}) {
  const { variants, args, overrides, forNode } = props;
  const $props = props.args;

  return (
    <React.Fragment>
      {}

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_plasmic_kit_q_4_color_tokens_css.plasmic_tokens,
            sty.root
          )}
        >
          <Navbar
            data-plasmic-name={"navbar"}
            data-plasmic-override={overrides.navbar}
            className={classNames("__wab_instance", sty.navbar)}
          />

          <ProductBox
            data-plasmic-name={"productBox"}
            data-plasmic-override={overrides.productBox}
            className={classNames("__wab_instance", sty.productBox)}
            id={"gid://shopify/Product/5447324729508" as const}
          >
            <ProductFetch
              data-plasmic-name={"productFetch"}
              data-plasmic-override={overrides.productFetch}
              className={classNames("__wab_instance", sty.productFetch)}
              id={"gid://shopify/Product/5447324729508" as const}
            >
              <div
                data-plasmic-name={"columns"}
                data-plasmic-override={overrides.columns}
                className={classNames(projectcss.all, sty.columns)}
              >
                <div className={classNames(projectcss.all, sty.column__isNaI)}>
                  <ProductSlider
                    data-plasmic-name={"productSlider"}
                    data-plasmic-override={overrides.productSlider}
                    className={classNames("__wab_instance", sty.productSlider)}
                    slideContainer={
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__erJWm
                        )}
                      />
                    }
                    thumbsContainer={
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__mIf4Q
                        )}
                      />
                    }
                  />
                </div>

                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.column___29Xxe)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox__nozXo)}
                  >
                    <ProductOptions
                      data-plasmic-name={"productOptions"}
                      data-plasmic-override={overrides.productOptions}
                      className={classNames(
                        "__wab_instance",
                        sty.productOptions
                      )}
                    >
                      <ProductOptionsDisplayName
                        data-plasmic-name={"productOptionsDisplayName"}
                        data-plasmic-override={
                          overrides.productOptionsDisplayName
                        }
                        className={classNames(
                          "__wab_instance",
                          sty.productOptionsDisplayName
                        )}
                      />

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__eSRua
                        )}
                      >
                        <ProductOptionsValues
                          data-plasmic-name={"productOptionsValues"}
                          data-plasmic-override={overrides.productOptionsValues}
                          activeColorOption={
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__pn2M7
                              )}
                            />
                          }
                          activeTextOption={
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox___9JzyP
                              )}
                            >
                              <ProductOptionsValueLabel
                                className={classNames(
                                  "__wab_instance",
                                  sty.productOptionsValueLabel__u3OKe
                                )}
                              />
                            </div>
                          }
                          className={classNames(
                            "__wab_instance",
                            sty.productOptionsValues
                          )}
                          colorOption={
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__rLSg
                              )}
                            />
                          }
                          columnGap={20 as const}
                          columns={6 as const}
                          editSlots={false}
                          rowGap={16 as const}
                          textOption={
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox___1KHmt
                              )}
                            >
                              <ProductOptionsValueLabel
                                className={classNames(
                                  "__wab_instance",
                                  sty.productOptionsValueLabel__dGJq1
                                )}
                              />
                            </div>
                          }
                        />
                      </div>
                    </ProductOptions>
                  </div>

                  <ProductTextField
                    data-plasmic-name={"productTextField"}
                    data-plasmic-override={overrides.productTextField}
                    className={classNames(
                      "__wab_instance",
                      sty.productTextField
                    )}
                    field={"description" as const}
                  />

                  <AddToCart
                    data-plasmic-name={"addToCart"}
                    data-plasmic-override={overrides.addToCart}
                    className={classNames("__wab_instance", sty.addToCart)}
                  >
                    <Button
                      data-plasmic-name={"button"}
                      data-plasmic-override={overrides.button}
                      className={classNames("__wab_instance", sty.button)}
                      color={"white" as const}
                    >
                      {"ADD TO CART"}
                    </Button>
                  </AddToCart>

                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__qetBz)}
                    >
                      <Collapse
                        className={classNames(
                          "__wab_instance",
                          sty.collapse__n1PfD
                        )}
                        title={"Care" as const}
                      />
                    </div>
                  ) : null}
                  {true ? (
                    <div
                      className={classNames(projectcss.all, sty.freeBox__tWvVs)}
                    >
                      <Collapse
                        className={classNames(
                          "__wab_instance",
                          sty.collapse__dwiSj
                        )}
                        title={"Details" as const}
                      />
                    </div>
                  ) : null}
                </p.Stack>
              </div>
            </ProductFetch>
          </ProductBox>
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "navbar",
    "productBox",
    "productFetch",
    "columns",
    "productSlider",
    "productOptions",
    "productOptionsDisplayName",
    "productOptionsValues",
    "productTextField",
    "addToCart",
    "button"
  ],
  navbar: ["navbar"],
  productBox: [
    "productBox",
    "productFetch",
    "columns",
    "productSlider",
    "productOptions",
    "productOptionsDisplayName",
    "productOptionsValues",
    "productTextField",
    "addToCart",
    "button"
  ],
  productFetch: [
    "productFetch",
    "columns",
    "productSlider",
    "productOptions",
    "productOptionsDisplayName",
    "productOptionsValues",
    "productTextField",
    "addToCart",
    "button"
  ],
  columns: [
    "columns",
    "productSlider",
    "productOptions",
    "productOptionsDisplayName",
    "productOptionsValues",
    "productTextField",
    "addToCart",
    "button"
  ],
  productSlider: ["productSlider"],
  productOptions: [
    "productOptions",
    "productOptionsDisplayName",
    "productOptionsValues"
  ],
  productOptionsDisplayName: ["productOptionsDisplayName"],
  productOptionsValues: ["productOptionsValues"],
  productTextField: ["productTextField"],
  addToCart: ["addToCart", "button"],
  button: ["button"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  navbar: typeof Navbar;
  productBox: typeof ProductBox;
  productFetch: typeof ProductFetch;
  columns: "div";
  productSlider: typeof ProductSlider;
  productOptions: typeof ProductOptions;
  productOptionsDisplayName: typeof ProductOptionsDisplayName;
  productOptionsValues: typeof ProductOptionsValues;
  productTextField: typeof ProductTextField;
  addToCart: typeof AddToCart;
  button: typeof Button;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicProduct__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicProduct__VariantsArgs;
    args?: PlasmicProduct__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicProduct__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicProduct__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicProduct__ArgProps,
      internalVariantPropNames: PlasmicProduct__VariantProps
    });

    return PlasmicProduct__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicProduct";
  } else {
    func.displayName = `PlasmicProduct.${nodeName}`;
  }
  return func;
}

export const PlasmicProduct = Object.assign(
  // Top-level PlasmicProduct renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navbar: makeNodeComponent("navbar"),
    productBox: makeNodeComponent("productBox"),
    productFetch: makeNodeComponent("productFetch"),
    columns: makeNodeComponent("columns"),
    productSlider: makeNodeComponent("productSlider"),
    productOptions: makeNodeComponent("productOptions"),
    productOptionsDisplayName: makeNodeComponent("productOptionsDisplayName"),
    productOptionsValues: makeNodeComponent("productOptionsValues"),
    productTextField: makeNodeComponent("productTextField"),
    addToCart: makeNodeComponent("addToCart"),
    button: makeNodeComponent("button"),

    // Metadata about props expected for PlasmicProduct
    internalVariantProps: PlasmicProduct__VariantProps,
    internalArgProps: PlasmicProduct__ArgProps
  }
);

export default PlasmicProduct;
/* prettier-ignore-end */
